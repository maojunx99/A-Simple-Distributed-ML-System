// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/process.proto

package core;

/**
 * Protobuf enum {@code core.ProcessStatus}
 */
public enum ProcessStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ALIVE = 0;</code>
   */
  ALIVE(0),
  /**
   * <code>LEAVED = 1;</code>
   */
  LEAVED(1),
  /**
   * <code>CRASHED = 2;</code>
   */
  CRASHED(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ALIVE = 0;</code>
   */
  public static final int ALIVE_VALUE = 0;
  /**
   * <code>LEAVED = 1;</code>
   */
  public static final int LEAVED_VALUE = 1;
  /**
   * <code>CRASHED = 2;</code>
   */
  public static final int CRASHED_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ProcessStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static ProcessStatus forNumber(int value) {
    switch (value) {
      case 0: return ALIVE;
      case 1: return LEAVED;
      case 2: return CRASHED;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ProcessStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ProcessStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ProcessStatus>() {
          public ProcessStatus findValueByNumber(int number) {
            return ProcessStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return core.ProcessOuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final ProcessStatus[] VALUES = values();

  public static ProcessStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ProcessStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:core.ProcessStatus)
}

